---
layout: 乔巴的第一篇博客
title:  "索引梳理"
date:   2019-06-13 17:03:36 +0530
categories: mysql 索引 优化
---
**概念**
---
1.在数据之外，数据库系统还维护着满足特定查找算法的数据结构，这些数据结构以某种方式引用（指向）数据，这样就可以在这些数据结构上实现高级查找算法。这种数据结构，就是索引。
2.一般情况下，算法中基本操作重复执行的次数是问题规模n的某个函数f(n),算法的时间度量记作 T(n)=O(f(n)) ，他表示随问题规模n的增大，算法执行时间的增长率和f(n)的增长相同，称作算法的渐进时间复杂度(asymptotic time complexity)，简称时间复杂度。
3.InnoDB与MyISAM类型的数据库最大的不同点是前者支持事物与外键和行级锁，而且前者不支持全文索引（FULLTEXT），不保存表的行数（但如果在select count(\*) from table 后加了where语句，前者与后者的效果相同）。
4.索引的选择性：不重复的索引值与表总数的比值，用sql查询选择性如下：
Select count(distinct(\`filed\`)) / count(\*) from \`table\`; （其中filed表示索引中的字段名）
---
**索引的使用与优化**
---
1.最左前缀原理中，在使用索引时对于where语句的条件顺序是很敏感的，但幸好mysql查询优化器会自动调整条件顺序以适应对应的索引，所以顺序不影响效果
2.根据最左前缀匹配，必须用到了索引中所有的列，否则会按照where子句中的列从左开始开始匹配索引中的列：如果不存在索引中的第一个条件，则不会使用到改索引；如果索引中间有一个字段没有被用到，则只会使用该索引该字段前的前缀，此时如果希望后面的字段也被用到可以做一些补偿措施，比如在数据少的情况下用IN语句把漏了的字段补上。
3.在使用like的时候，需要注意如果该字段在索引中，%符号不得放在最前面，否则不会用到该索引
4.对于范围查询（如 id < 10），若有字段使用了范围查询，该字段在索引中，那么该索引的该字段后面的字段都不会被用到索引，也就是说，如果where子句中有两个字段使用了范围查询，而这两个字段都存在于一个索引中，那么只有索引中靠前的字段会被用到索引。
5.between相当于in，不属于范围查询
6.如果查询条件中某索引中的字段用了函数，或者用了类似于id - 1 > 2的表达式，则mysql不会为这列使用索引。
7.索引的选择性的取值范围是(0,1]，选择性越高，表示该索引的价值越大。
8.为了提高数据插入的效率，建议在业务主键外新增一个自增主键。
